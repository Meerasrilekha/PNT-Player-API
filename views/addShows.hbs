<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/addMovie.css">
    <title>TV Show Details</title>
</head>

<body>
    <h1 style="text-align: center;">TV Show Details</h1>
    <a href="/">Go to Dashboard</a>

    <div class="showDetailsContainer">
        <div class="posterContainer">
            <img src="{{showsDetails.poster_path}}" alt="Show Poster">
        </div>

        <div class="detailsTextContainer">
            <h2>{{showsDetails.name}}</h2>
            <p style="font-size: 0.8em; margin-bottom:5px">{{showsDetails.overview}}</p>
            <p style="font-size: 0.8em; font-weight: bold;">{{showsDetails.first_air_date}} • {{showsDetails.genres}} •
                {{showsDetails.vote_average}}/10</p>

        <label style="font-size: 0.8em; margin-bottom:5px" for="ignoreTitleOnScan">Ignore this show on Scan:</label>
            <select id="ignoreTitleOnScan" name="ignoreTitleOnScan">
                <option value="false">False</option>
                <option value="true">True</option>
            </select><br>

            <div id="showDirNameContainer" style="display: none;">
                <label style="font-size: 0.8em; margin-bottom:5px" for="showDirName">TV Show directory name:</label>
                <input type="text" id="showDirName" name="showDirName" value="" /><br>
            </div>
        </div>
    </div>



    {{#each showsDetails.seasons}}
    <div class="seasonContainer">
        <h3 class="seasonNum">Season {{this.season_number}}</h3>
        <div>
            {{#each this.episodes}}
            <div class="episodeDetailsContainer">
                <!-- Include episode poster if available -->
                {{#if this.poster}}
                <div class="episodePosterContainer">
                    <img src={{this.poster}} alt="Episode Poster" style="max-width: 100px;">
                </div>
                {{/if}}
                <div class="episodedetailsTextContainer">
                    <strong>Episode {{this.episode_number}}:</strong> {{this.name}} ({{this.runtime}} mins)
                    <p>{{this.overview}}</p>

                    <!-- Add a textbox for the download link for each episode -->
                    <label for="episodeDownloadLink">Download Link:</label>
                    <input type="text" id="edl{{../season_number}}{{this.episode_number}}"
                        name="edl{{../season_number}}{{this.episode_number}}" value="{{this.downloadLink}}"
                        placeholder="Enter download link" /><br>
                </div>
            </div>
            {{/each}}
        </div>
    </div>
    {{/each}}


    <button class="submit-btn" type="button" onclick="submitShowsDetails()">Add TV Show</button>



    {{#if errorMessage}}
    <p style="color: red;">{{errorMessage}}</p>
    {{/if}}

    {{#if successMessage}}
    <p style="color: green;">{{successMessage}}</p>
    {{/if}}
</body>

<script>

    document.getElementById('ignoreTitleOnScan').addEventListener('change', function () {
                const showDirNameContainer = document.getElementById('showDirNameContainer');
                if (this.value === 'true') {
                    showDirNameContainer.style.display = 'block';
                } else {
                    showDirNameContainer.style.display = 'none';
                }
            });

        // Trigger the change event on page load to set the initial state correctly
    document.getElementById('ignoreTitleOnScan').dispatchEvent(new Event('change'));


    function submitShowsDetails() {
        var ignoreTitleOnScanValue = document.getElementById('ignoreTitleOnScan').value;
        var showDirNameValue = ignoreTitleOnScanValue === 'true' ? document.getElementById('showDirName').value : '';
        // Assuming showsDetails is a JavaScript object
        var showsDetailsData = {
            showDetails: {
                poster_path: "{{showsDetails.poster_path}}",
                backdrop_path: "{{showsDetails.backdrop_path}}",
                name: "{{showsDetails.name}}",
                overview: "{{showsDetails.overview}}",
                first_air_date: "{{showsDetails.first_air_date}}",
                genres: "{{showsDetails.genres}}",
                vote_average: "{{showsDetails.vote_average}}",
                ignoreTitleOnScan: ignoreTitleOnScanValue,
                showDirName: showDirNameValue
            },
            seasons: []
        };

        {{#each showsDetails.seasons}}
        var seasonData = {
            season_number: "{{this.season_number}}",
            episodes: []
        };

        {{#each this.episodes}}
        var episodeData = {
            episode_number: "{{this.episode_number}}",
            name: "{{this.name}}",
            runtime: "{{this.runtime}}",
            overview: "{{this.overview}}",
            poster: "{{this.poster}}",  // Add poster path if available
            downloadLink: document.getElementById("edl{{../season_number}}{{this.episode_number}}").value // Get download link from the input field
        };

        seasonData.episodes.push(episodeData);
        {{/each}}

        showsDetailsData.seasons.push(seasonData);
        {{/each}}

        // Log the showsDetailsData
        console.log("Shows Details on button clicked", showsDetailsData);

        // You can send this data to the server or perform other actions

        fetch('/add-show-details', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(showsDetailsData),
        })
            .then(response => response.json())
            .then(data => {
                console.log('Success:', data);
                if (data.success) {
                    alert("Show has been added successfully!!")
                } else {
                    alert("Failed to add the show!!")
                }
                // Handle success response from the server
            })
            .catch((error) => {
                console.error('Error:', error);
                // Handle error
            });
    }
</script>

<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #FFFFFF;
        margin: 0;
        padding: 20px;
    }

    h1 {
        color: #333;
        text-align: center;
    }

    a[href="/"] {
        color: #005040;
        margin-left: 8rem;
        font-weight: 500;
        text-decoration: none;
        font-size: 1.2rem;
        display: inline-block;
        margin-bottom: 20px;
    }
    a[href="/"]:hover {
        text-decoration: underline;
    }

    .seasonContainer {
        max-width: 900px;
        margin: 0 auto 30px auto;
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0,0,0,0.07);
        padding: 20px;
    }

    .seasonNum {
        color: #333;
        margin-bottom: 20px;
    }

    .episodeDetailsContainer {
        max-width: 850px;
        margin: 0 auto 20px auto;
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 0 6px rgba(0,0,0,0.05);
        padding: 16px;
        display: flex;
        align-items: flex-start;
    }

    .episodePosterContainer {
        margin-right: 20px;
    }

    .episodePosterContainer img {
        max-width: 100px;
        border-radius: 10px;
        border: 4px solid #EAC800;
    }

    .episodedetailsTextContainer {
        flex: 1;
        margin-left: 16px;
    }

    label {
        display: block;
        margin: 10px 0 5px;
        color: #333;
    }

    input {
        width: 100%;
        padding: 8px;
        margin-bottom: 16px;
        box-sizing: border-box;
        border: 2px solid #757575;
        border-radius: 4px;
        outline: none;
        background: #CED5D8;
        color: #231F20;
        transition: border-color 0.3s ease;
    }
    input::placeholder {
        color: #757575;
        opacity: 1;
    }

    .submit-btn {
        display: block;
        max-width: 300px;
        margin: 30px auto 0 auto;
        background-color: #005040;
        color: #fff;
        padding: 12px 24px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

    .submit-btn:hover {
        background-color: #003d32;
    }

    .posterContainer img {
        max-width: 200px;
        border-radius: 10px;
        border: 4px solid #EAC800;
    }
    .detailsTextContainer h2 {
        color: #231F20;
        margin-bottom: 10px;
    }
    .detailsTextContainer p {
        color: #231F20;
        margin: 0;
        text-align: justify;
    }

    .showDetailsContainer {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin-bottom: 30px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
    }
    .posterContainer {
        margin-right: 0;
        margin-bottom: 10px;
        display: flex;
        justify-content: center;
    }
    .detailsTextContainer {
        flex: 1;
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    .detailsTextContainer h2 {
        color: #231F20;
        margin-bottom: 10px;
        text-align: center;
    }
    .detailsTextContainer p {
        color: #231F20;
        margin: 0 0 10px 0;
        text-align: justify;
        display: inline-block;
        max-width: 700px;
    }
    .meta-info {
        color: #231F20;
        font-weight: bold;
        margin-bottom: 10px;
        text-align: center;
        display: block;
    }
</style>

</html>